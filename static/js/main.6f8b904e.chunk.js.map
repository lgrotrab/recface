{"version":3,"sources":["components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Logo/Logo.js","components/ImageForm/ImageForm.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js","components/Logo/brain.jpg"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","SignIn","id","htmlFor","type","name","value","href","Register","Logo","options","max","height","width","src","brain","alt","ImageForm","onInputChange","onButtonSubmit","onChange","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","left","leftCol","bottom","bottomRow","Rank","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","event","setState","input","target","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","onSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.6f8b904e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) =>{\r\n        if(isSignedIn === true){\r\n            return(\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n                </nav>\r\n            );\r\n        }else{\r\n            return(\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                    <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n                </nav>\r\n            );\r\n        }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\n\r\nconst SignIn = ({onRouteChange}) =>{\r\n    return(\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <div className=\"pa4 black-80\">\r\n                <form className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0 center\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                        <p href=\"#0\" onClick={()=> onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\n\r\nconst Register = ({onRouteChange}) =>{\r\n    return(\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <div className=\"pa4 black-80\">\r\n                <form className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0 center\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './brain.jpg';\r\n\r\n\r\nconst Logo = () =>{\r\n    return(\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} > \r\n                <img className=\"Tilt-inner\" src={brain} alt='Logo'/>\r\n            </Tilt> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageForm.css';\r\n\r\n\r\nconst ImageForm = ({onInputChange, onButtonSubmit}) =>{\r\n    return(\r\n        <>\r\n            <p className='f3'>\r\n                {'Este cerébro mágico irá detectar rostos nas suas imagens, teste a vontade'}\r\n            </p>\r\n            <div className='form center pa4 br3 shadow-5'>\r\n                <input className='f4 p2 w-70 center' type='text' onChange={onInputChange}/>\r\n                <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detectar</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ImageForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box}) =>{\r\n    return(\r\n        <div className='center pt2'>  \r\n            <div className='absolute'>\r\n                <img id='inputImage' alt={''} src={imageUrl} width='500px' height='auto'/>\r\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, left: box.leftCol, bottom: box.bottomRow}}></div>\r\n            </div>  \r\n         </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\n\r\nconst Rank = () =>{\r\n    return(\r\n        <>\r\n            <div className='white f3'>\r\n                {'Luis, seu rank atual é '}\r\n            </div>\r\n            <div className='white f1'>\r\n                {'#5'}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React, {Component} from 'react';\r\nimport Clarifai from 'clarifai';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Register from './components/Register/Register';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageForm from './components/ImageForm/ImageForm';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Rank from './components/Rank/Rank';\r\nimport Particles from 'react-particles-js';\r\nimport 'tachyons';\r\nimport './App.css';\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: '4167d68b7c9047cea4efe9b0c85809bd'\r\n });\r\n\r\nconst particlesOptions = {\r\n    particles: {\r\n      number:{\r\n        value: 50,\r\n        density: {\r\n          enable: true,\r\n          value_area: 800\r\n        }\r\n      }\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      imageUrl: '',\r\n      box: {},\r\n      route: 'signin',\r\n      isSignedIn: false\r\n    }\r\n  }\r\n\r\n  onInputChange = (event) =>{\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputImage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col*width,\r\n      topRow: clarifaiFace.top_row*height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height) \r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) =>{\r\n\r\n    this.setState({box: box});\r\n  }\r\n\r\n  onSubmit = () =>{\r\n    this.setState({imageUrl : this.state.input});\r\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\r\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) =>{\r\n    if(route === 'signout'){\r\n      this.setState({isSignedIn: false});\r\n    }else if(route === 'home'){\r\n      this.setState({isSignedIn: true});\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n  \r\n  render(){\r\n    const {isSignedIn, imageUrl, box, route} = this.state;\r\n    return (    \r\n      <div className=\"App\">\r\n        <Particles className='particles' params = {particlesOptions}/>\r\n        <Navigation isSignedIn= {isSignedIn} onRouteChange ={this.onRouteChange}/>\r\n        { route === 'home' \r\n          ?<>\r\n            <Logo />\r\n            <Rank />\r\n            <ImageForm onInputChange={this.onInputChange} onButtonSubmit={this.onSubmit}/>\r\n            <FaceRecognition box={box} imageUrl = {imageUrl}/>\r\n          </> \r\n          \r\n          :(route === 'signin'\r\n            ?<SignIn onRouteChange ={this.onRouteChange}/>\r\n            :<Register onRouteChange = {this.onRouteChange} />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.1f203384.jpg\";"],"sourceRoot":""}